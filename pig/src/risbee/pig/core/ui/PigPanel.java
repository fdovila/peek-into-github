/*
peek-into-github

Developed by Rishabh Rao
rishabhsrao.wordpress.com
rishabhsrao@gmail.com
twitter.com/rishabhsrao

This file is a part of peek-into-github.

peek-into-github is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

peek-into-github is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with peek-into-github. If not, see <http://www.gnu.org/licenses/>.
*/
package risbee.pig.core.ui;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import org.openide.util.Exceptions;
import org.openide.util.NbPreferences;
import risbee.pig.core.net.Github;
import risbee.pig.core.notification.ErrorNotifier;

final class PigPanel extends javax.swing.JPanel {
	private final PigOptionsPanelController controller;

	PigPanel(PigOptionsPanelController controller) {
		this.controller = controller;
		initComponents();
		// TODO listen to changes in form fields and call controller.changed()
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pigOptionsContainerPanel = new javax.swing.JPanel();
        githubUsernameLabel = new javax.swing.JLabel();
        githubUsernameTextField = new javax.swing.JTextField();
        refreshOnStartupCheckbox = new javax.swing.JCheckBox();
        developerLabel = new javax.swing.JLabel();

        pigOptionsContainerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.pigOptionsContainerPanel.border.title"))); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(githubUsernameLabel, org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.githubUsernameLabel.text")); // NOI18N

        githubUsernameTextField.setText(Github.DEFAULT_USERNAME);
        githubUsernameTextField.setToolTipText(org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.githubUsernameTextField.toolTipText")); // NOI18N
        githubUsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                githubUsernameTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(refreshOnStartupCheckbox, org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.refreshOnStartupCheckbox.text")); // NOI18N
        refreshOnStartupCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.refreshOnStartupCheckbox.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(developerLabel, org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.developerLabel.text")); // NOI18N
        developerLabel.setToolTipText(org.openide.util.NbBundle.getMessage(PigPanel.class, "PigPanel.developerLabel.toolTipText")); // NOI18N
        developerLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                developerLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pigOptionsContainerPanelLayout = new javax.swing.GroupLayout(pigOptionsContainerPanel);
        pigOptionsContainerPanel.setLayout(pigOptionsContainerPanelLayout);
        pigOptionsContainerPanelLayout.setHorizontalGroup(
            pigOptionsContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pigOptionsContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pigOptionsContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pigOptionsContainerPanelLayout.createSequentialGroup()
                        .addComponent(githubUsernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(githubUsernameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                    .addComponent(refreshOnStartupCheckbox)
                    .addComponent(developerLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pigOptionsContainerPanelLayout.setVerticalGroup(
            pigOptionsContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pigOptionsContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pigOptionsContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(githubUsernameLabel)
                    .addComponent(githubUsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshOnStartupCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(developerLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pigOptionsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pigOptionsContainerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void githubUsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_githubUsernameTextFieldActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_githubUsernameTextFieldActionPerformed

	private void developerLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_developerLabelMouseClicked
		if(Desktop.isDesktopSupported()) {
			try {
				Desktop.getDesktop().browse((new URL("http://github.com/rishabhsrao/peek-into-github")).toURI());
			} catch (IOException ex) {
				new ErrorNotifier().show(ex);
			} catch(URISyntaxException ex) {
				new ErrorNotifier().show(ex);
			}
		}
	}//GEN-LAST:event_developerLabelMouseClicked

	void load() {
		// read settings and initialize GUI
		// Example:        
		// someCheckBox.setSelected(Preferences.userNodeForPackage(PigPanel.class).getBoolean("someFlag", false));
		// or for org.openide.util with API spec. version >= 7.4:
		// someCheckBox.setSelected(NbPreferences.forModule(PigPanel.class).getBoolean("someFlag", false));
		// or:
		// someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
		
		// Retrieve the Github username.
		githubUsernameTextField.setText(NbPreferences.forModule(PigPanel.class).get("githubUsername", Github.DEFAULT_USERNAME));
		
		// Retrieve refresh on startup option.
		refreshOnStartupCheckbox.setSelected(NbPreferences.forModule(PigPanel.class).getBoolean("refreshOnStartup", false));
	}

	void store() {
		// store modified settings
		// Example:
		// Preferences.userNodeForPackage(PigPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
		// or for org.openide.util with API spec. version >= 7.4:
		// NbPreferences.forModule(PigPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
		// or:
		// SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
		
		// Store only if the form is valid.
		if(this.valid()) {
			// Store the Github username.
			NbPreferences.forModule(PigPanel.class).put("githubUsername", githubUsernameTextField.getText());

			// Store refresh on startup option.
			NbPreferences.forModule(PigPanel.class).putBoolean("refreshOnStartup", refreshOnStartupCheckbox.isSelected());
		}
	}

	boolean valid() {
		// check whether form is consistent and complete
		
		// Don't allow an empty username.
		if(githubUsernameTextField.getText().trim().isEmpty()) {
			githubUsernameTextField.setText(Github.DEFAULT_USERNAME);
		}
		
		return true;		
	}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel developerLabel;
    private javax.swing.JLabel githubUsernameLabel;
    private javax.swing.JTextField githubUsernameTextField;
    private javax.swing.JPanel pigOptionsContainerPanel;
    private javax.swing.JCheckBox refreshOnStartupCheckbox;
    // End of variables declaration//GEN-END:variables
}
